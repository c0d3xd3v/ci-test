name: Windows Release

on:
  push:
    branches:
      - 'main'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   5.15.2
  ARTIFACT:     qt-planets-build.zip
  INSTALL_DIRECTORY: "D:/install"

jobs:
  build:
    runs-on:  windows-2019

    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Get all tags for correct version determination
        working-directory:  ${{ github.workspace }}
        run: |
          git fetch --all --tags -f
#      - name: (3) Install Qt
#        uses: jurplel/install-qt-action@v2
#        with:
#          version:      ${{ env.QT_VERSION }}
#          host:         windows
#          target:       desktop
#          arch:         win64_msvc2019_64
#          dir:          ${{ runner.temp }}
#          modules:      qtcharts qt3d
#          setup-python: false
              
      - name: Create build directory
        run:  mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Cache Build
        uses: actions/cache@v3
        with: 
          path: ${{ runner.temp }}\build
          key: windows-build
          restore-keys: windows-build

      - name: Build
        working-directory: ${{ runner.temp }}\build
        env:
          GMP_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/gmp
          GMPXX_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/gmpxx
          eigen_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/eigen
          embree_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/embree-3.13.3
          CLI11_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/CLI11
          geogram_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/modules
          TBB_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/tbb
          fmt_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/fmt
          Libigl_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/igl
          spdlog_DIR: ${{ env.INSTALL_DIRECTORY }}/3rdparty/lib/cmake/spdlog
          GMP_INCLUDE_DIRS: "C:/Program Files (x86)/GMP/include"
          GMP_LIBRARIES: "C:/Program Files (x86)/GMP/lib"
          GMP_WINDOWS_PATH: "C:/Program Files (x86)/GMP"
          CMAKE_PREFIX_PATH: ${{env.Qt5_Dir}}
        run:  |
              cmake -S ${{github.workspace}} -B . -DCMAKE_MSVC_RUNTIME_LIBRARY="MultiThreaded$<$<CONFIG:Release>:Release>" -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIRECTORY }}
              cmake --build . --parallel 8 --config Release -- /p:Platform=x64 /p:NODEFAULTLIB=msvcprt.lib /p:RuntimeLibrary=MT_StaticRelease

      - name: Zip build
        working-directory: ${{ runner.temp }}
        run:  |
              7z a ${{ env.ARTIFACT }} ${{ env.INSTALL_DIRECTORY }}/* -r
              
      - name: Save build artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\${{ env.ARTIFACT }} 